generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id                  Int                    @id @default(autoincrement())
  email               String                 @unique
  password            String                 @db.VarChar(200)
  created_at          DateTime               @default(now())
  updated_at          DateTime?
  login_at            DateTime?
  role                Users_role             @default(User)
  emailVerified       Boolean                @default(false)
  otp                 String?
  accountStatus       Int                    @default(1234567890)
  phone               String                 @unique @db.VarChar(100)
  pin                 Int?
  fullName            String                 @db.VarChar(100)
  bvnVerified         Boolean                @default(false)
  bvn                 String?
  dailyTransaction    Int                    @default(0)
  phone_verified      Boolean                @default(false)
  email_verified_at   Boolean                @default(false)
  photo_url           String?                @db.Text
  bvnVerifyString     String?
  whitelistip         Boolean                @default(false)
  commission          Commission             @default(null)
  pin_auth            Boolean                @default(false)
  level               Level                  @default(agent)
  transaction         transactions[]
  airtime_request     airtime_requests[]
  electricity_request electricity_requests[]
  wallet              wallet?
  virtualAccount      VirtualAccount?

  @@index([id])
  @@index([email], map: "unique_email_idx")
}

model airtime_requests {
  id         Int       @id @default(autoincrement())
  network    String    @db.VarChar(20)
  category   String?   @db.VarChar(50)
  amount     Decimal   @db.Decimal(8, 2)
  request_id String?   @unique @db.VarChar(80)
  trans_code String    @unique @db.VarChar(80)
  response   Json?
  payload    Json?
  phone      String    @db.VarChar(20)
  user_id    Int
  status     Status
  Users      Users     @relation(fields: [user_id], references: [id])
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model data_requests {
  id           Int       @id @default(autoincrement())
  user_id      Int
  network      String?
  amount       String?
  request_id   String    @unique
  external_ref String?
  response     Json?
  payload      Json?
  trans_code   String    @unique
  package      String?
  bundle       String?
  status       Status
  phone        String
  created_at   DateTime? @default(now()) @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)
}

model wallet {
  code           Int       @id @default(autoincrement())
  wallet_id      String    @db.VarChar(40)
  user_id        Int       @unique
  balance_before Decimal   @default(0.00) @db.Decimal(9, 2)
  balance_after  Decimal   @default(0.00) @db.Decimal(9, 2)
  balance        Decimal   @default(0.00) @db.Decimal(9, 2)
  account_status String?   @db.VarChar(20)
  name           String?   @db.VarChar(20)
  Users          Users     @relation(fields: [user_id], references: [id])
  created_at     DateTime? @default(now()) @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)

  @@index([code])
  @@index([user_id], map: "unique_user_idx")
}

model electricity_requests {
  id              Int       @id @default(autoincrement())
  status          Status
  amount          String
  type            String
  user_id         Int
  unit            String?
  token           String?
  resetToken      String?
  configureToken  String?
  customerName    String?   @db.VarChar(200)
  customerAddress String?   @db.VarChar(225)
  debtPayment     String?
  taxAmount       String?
  arrearsApplied  String?
  meterNumber     String
  request_id      String    @unique
  trans_code      String    @unique
  payload         Json?
  response        Json?
  Users           Users     @relation(fields: [user_id], references: [id])
  created_at      DateTime? @default(now()) @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
}

model transactions {
  transaction_id     Int       @id @default(autoincrement())
  user_id            Int
  name               String?
  email              String
  walletId           String?
  operator_name      String
  operator_unique_id String?   @unique
  status             Status    @default(Pending)
  amount             Decimal   @db.Decimal(9, 2)
  currency           String    @default("NGN")
  payload            Json?
  response           Json?
  reference          String    @unique
  reason             String?
  Users              Users     @relation(fields: [user_id], references: [id])
  created_at         DateTime? @default(now()) @db.Timestamp(0)
  updated_at         DateTime? @db.Timestamp(0)

  @@index([user_id], map: "transactions_user_id_fkey")
}

model alternative_bundles {
  id            Int     @id @default(autoincrement())
  network       String  @default("MTN") @db.VarChar(200)
  actual_amount Decimal @db.Decimal(8, 2)
  alt_amount    Decimal @db.Decimal(8, 2)
  allowance     String? @db.VarChar(200)
  code          String  @db.VarChar(5)
  alt_code      String? @db.VarChar(200)
}

model directbundle_requests {
  id                Int       @id @default(autoincrement())
  network           String    @db.VarChar(20)
  category          String    @db.VarChar(50)
  actual_amount     Decimal   @db.Decimal(8, 2)
  price             Decimal   @db.Decimal(8, 2)
  data_amount       Float?
  allowance         String    @db.VarChar(50)
  code              String    @db.VarChar(5)
  habari_code       String?   @db.VarChar(200)
  validity          String    @db.VarChar(100)
  tariff            String    @db.VarChar(200)
  bundlecode        String?   @db.VarChar(10)
  ringoeq           String?   @db.VarChar(100)
  ringoamount       Float?
  product_id        String?   @db.VarChar(200)
  biller_id         Int       @default(5)
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
  creditswitch_code String?   @db.VarChar(199)
}

model dataProducts {
  id         Int       @id @default(autoincrement())
  network    String    @db.VarChar(10)
  validity   String    @db.VarChar(200)
  allowance  String    @db.VarChar(70)
  price      String    @db.VarChar(20)
  product_id String    @unique @db.VarChar(20)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model VirtualAccount {
  id            Int      @id @default(autoincrement())
  userId        Int      @unique
  accountNumber String   @unique
  bankName      String
  created_at    DateTime @default(now())
  user          Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model wallet_histories {
  id           BigInt    @id @default(autoincrement())
  amount       Float
  userId       BigInt    @db.UnsignedBigInt
  source       String?   @db.VarChar(100)
  channel      String?
  status       String    @default("0") @db.VarChar(1)
  balanceAfter Float?
  createdAt    DateTime? @default(now()) @db.Timestamp(0)
  updatedAt    DateTime? @db.Timestamp(0)
  reference    String?   @db.VarChar(100)
  description  String?   @db.VarChar(250)
  type         String?   @default("CREDIT") @db.VarChar(20)

  @@index([createdAt])
  @@index([description])
  @@index([reference])
  @@index([type])
  @@index([userId])
}

enum Users_role {
  Super_Admin
  Admin
  User
}

enum Status {
  Pending
  Failed
  Successful
}

enum Commission {
  percentage
  static
  null
}

enum Level {
  agent
  null
}
